<UserControl x:Class="ThirtyRails.Controls.TileControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:cal="http://www.caliburnproject.org"
             xmlns:gameBoard="clr-namespace:ThirtyRails.Screens.Game.GameBoard"
             xmlns:logic="clr-namespace:ThirtyRails.Logic"
             mc:Ignorable="d" 
             d:DesignHeight="300" d:DesignWidth="300" d:DataContext="{d:DesignInstance logic:Tile}">
  <UserControl.Template>
    <ControlTemplate TargetType="UserControl">
      <Button FocusVisualStyle="{x:Null}" Focusable="False"
              Content="{TemplateBinding Content}"
              cal:Message.Attach="[Event Click] = [Action OnTileClick($dataContext)];[Event MouseEnter] = [Action OnTileEnter($dataContext)];[Event MouseLeave] = [Action OnTileLeave($dataContext)]">
        <Button.Template>
          <ControlTemplate TargetType="Button">
            <Border>
              <Border.Style>
                <Style TargetType="Border">
                  <Setter Property="Background" Value="{Binding Background, RelativeSource={RelativeSource FindAncestor, AncestorType=UserControl}}"/>
                  <Style.Triggers>
                    <DataTrigger Binding="{Binding IsValidTarget}" Value="True">
                      <Setter Property="Background" Value="LightGreen"/>
                    </DataTrigger>
                  </Style.Triggers>
                </Style>
              </Border.Style>
              <Grid Opacity="1">
                <Border Opacity="0.8">
                  <Border.Style>
                    <Style TargetType="Border">
                      <Setter Property="Background" Value="Transparent"/>
                      <Style.Triggers>
                        <MultiDataTrigger>
                          <MultiDataTrigger.Conditions>
                            <Condition Binding="{Binding IsMouseOver}" Value="True"/>
                            <Condition Binding="{Binding CanHighlight}" Value="True"/>
                          </MultiDataTrigger.Conditions>
                          <MultiDataTrigger.Setters>
                            <Setter Property="Background" Value="White"/>
                          </MultiDataTrigger.Setters>
                        </MultiDataTrigger>
                      </Style.Triggers>
                    </Style>
                  </Border.Style>
                </Border>
                <ContentPresenter 
                  x:Name="contentPresenter" Focusable="False" 
                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                  Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" 
                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
              </Grid>
            </Border>
          </ControlTemplate>
        </Button.Template>
      </Button>
    </ControlTemplate>
  </UserControl.Template>

</UserControl>
